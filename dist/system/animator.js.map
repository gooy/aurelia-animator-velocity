{"version":3,"sources":["animator.js"],"names":[],"mappings":"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","file":"animator.js","sourceRoot":"/source/","sourcesContent":["import Velocity from 'velocity';\nimport 'velocity/velocity.ui';\n\nimport JSOL from 'jsol';\nimport {animationEvent} from 'aurelia-templating';\n\n//import 'core-js';\n\n/**\n * Aurelia animator implementation using Velocity\n */\nexport class VelocityAnimator {\n\n  /**\n   * Default options for velocity\n   * @type {Object}\n   */\n  options = {\n    duration: 400,\n    easing:'linear'\n  };\n\n  isAnimating = false;\n\n  enterAnimation = {properties:\":enter\",options:{easing:\"ease-in\",duration:200}};\n  leaveAnimation = {properties:\":leave\",options:{easing:\"ease-in\",duration:200}};\n\n  /**\n   * Array of easing names that can be used with this animator\n   *\n   * @type {Array}\n   */\n  easings = [];\n\n  /**\n   * Effects mapped by name\n   *\n   * @type {Object}\n   */\n  effects = {\n    \":enter\": \"fadeIn\",\n    \":leave\": \"fadeOut\"\n  };\n\n  constructor(container) {\n    this.container = container||window.document;\n    this.easings = Object.assign(Velocity.Easings,this.easings);\n    this.effects = Object.assign(Velocity.Redirects,this.effects);\n  }\n\n  //--------------------------------- Aurelia Animator interface\n\n  /**\n   * Run a animation by name or by manually specifying properties and options for it\n   *\n   * @param element {HTMLElement|Array<HTMLElement>}    Element or array of elements to animate\n   * @param nameOrProps {String|Object}                       Element properties to animate\n   * @param options {Object}                            Animation options\n   *\n   * @returns {Promise} resolved when animation is complete\n   */\n  animate(element,nameOrProps,options,silent) {\n    this.isAnimating = true;\n    let _this = this;\n    let overrides = {\n      complete:function(el){\n        _this.isAnimating = false;\n        if(!silent) dispatch(el,\"animateDone\");\n        if(options && options.complete) options.complete.apply(this,arguments);\n      }\n    };\n    if(!element) return Promise.reject(new Error(\"invalid first argument\"));\n\n    //resolve selectors\n    if(typeof element === \"string\") element = this.container.querySelectorAll(element);\n\n    //if nothing was found or no element was passed resolve the promise immediatly\n    if(!element || element.length === 0) return Promise.resolve(element);\n\n    if(!silent) dispatch(element,\"animateBegin\");\n\n    if(typeof nameOrProps === \"string\"){\n      nameOrProps =  this.resolveEffectAlias(nameOrProps);\n      //if(!nameOrProps) Promise.reject(new Error(`effect alias ${nameOrProps} not found`));\n    }\n\n    //try to run the animation\n    var opts = Object.assign({},this.options,options,overrides);\n    var p = Velocity(element, nameOrProps, opts);\n\n    //reject the promise if Velocity didn't return a Promise due to invalid arguments\n    if(!p) return Promise.reject(new Error(\"invalid element used for animator.animate\"));\n    return p;\n  }\n\n  /**\n   * Stop an animation\n   *\n   * @param element {HTMLElement}   Element to animate\n   * @param clearQueue {boolean}    clear the animation queue\n   *\n   * @returns {Animator} return this instance for chaining\n   */\n  stop(element, clearQueue){\n    Velocity(element,'stop',clearQueue);\n    this.isAnimating = false;\n    return this;\n  }\n\n  /**\n   * Stop an animation\n   *\n   * @param element {HTMLElement}   Element to animate\n   *\n   * @returns {Animator} return this instance for chaining\n   */\n  reverse(element){\n    Velocity(element,'reverse');\n    return this;\n  }\n\n  /**\n   * Bring animation back to the start state (this does not stop an animation)\n   *\n   */\n  rewind(element){\n    Velocity(name,'rewind');\n    return this;\n  }\n\n  /**\n   * Register a new effect by name.\n   *\n   * if second parameter is a string the effect will registered as an alias\n   *\n   * @param name {String}   name for the effect\n   * @param props {Object}  properties for the effect\n   */\n  registerEffect(name,props){\n    if(name[0] === \":\") {\n      if(typeof props === \"string\"){\n        this.effects[name] = props;\n      }else{\n        throw new Error(\"second parameter must be a string when registering aliases\");\n      }\n    }else{\n      Velocity.RegisterEffect(name,props);\n    }\n    return this;\n  }\n\n  /**\n   * Unregister an effect by name\n   *\n   * @param name {String}   name of the effect\n   */\n  unregisterEffect(name){\n    delete this.effects[name];\n    return this;\n  }\n\n  /**\n   * Run a seqeunce of animations, one after the other\n   *\n   * @param sequence {Array}  array of animations\n   */\n  runSequence(sequence){\n    dispatch(window,\"sequenceBegin\");\n    return new Promise((resolve, reject) => {\n      this.sequenceReject = resolve;\n      var last = sequence[sequence.length-1];\n      last.options = last.options||last.o||{};\n      last.options.complete = ()=>{\n        if(!this.sequenceReject) return;\n        this.sequenceReject = undefined;\n        dispatch(window,\"sequenceDone\");\n        resolve();\n      };\n      try{\n        Velocity.RunSequence(sequence);\n      }catch(e){\n        this.stopSequence(sequence);\n        this.sequenceReject(e);\n      }\n    });\n  }\n\n  /**\n   * runs stop on all elements in a sequence\n   *\n   * @param sequence {Array}  array of animations\n   */\n  stopSequence(sequence){\n    sequence.map(item=>{\n      var el = item.e||item.element||item.elements;\n      this.stop(el,true);\n    });\n    if(this.sequenceReject) {\n      this.sequenceReject();\n      this.sequenceReject = undefined;\n    }\n    dispatch(window,\"sequenceDone\");\n    return this;\n  }\n\n  /**\n   * Resolve the real effect name from an effect alias\n   */\n  resolveEffectAlias(alias){\n    //resolve alias if string start with a colon\n    if(typeof alias === \"string\" && alias[0]===\":\"){\n      return this.effects[alias];\n    }\n    return alias;\n  }\n\n  //--------- The enter and leave animations are called for each page transition made by the router\n\n  /**\n   * Run the enter animation on an element\n   *\n   * @param element {HTMLElement}   Element to animate\n   * @returns {Promise} resolved when animation is complete\n   */\n  enter(element,effectName,options) {\n    return this.stop(element,true)._runElementAnimation(element,effectName||':enter',options,'enter');\n  }\n\n  /**\n   * Run the leave animation on an element\n   *\n   * @param element {HTMLElement}   Element to animate\n   *\n   * @returns {Promise} resolved when animation is complete\n   */\n  leave(element,effectName,options) {\n    return this.stop(element,true)._runElementAnimation(element,effectName||':leave',options,'leave').then(elements=>{\n    });\n  }\n\n  _runElements(element,name,options={}){\n\n    //if nothing was found or no element was passed resolve the promise immediatly\n    if(!element) return Promise.reject(new Error(\"invalid first argument\"));\n\n    //resolve selectors\n    if(typeof element === \"string\") element = this.container.querySelectorAll(element);\n\n    //if nothing was found or no element was passed resolve the promise immediatly\n    if(!element || element.length === 0) return Promise.resolve(element);\n\n    for (var i = 0; i < element.length; i++) {\n      this._runElementAnimation(element[i],name,options);\n    }\n  }\n\n  //--------------------------------- Private methods\n\n  /**\n   * execute an animation that is coupled to an HTMLElement\n   *\n   * The html element can optionally override the animation options through it's attributes\n   *\n   * @param element {HTMLElement}   Element to animate\n   * @param name {String}           Name of the effect to execute\n   * @param options                 animation options\n   *\n   * @returns {Promise} resolved when animation is complete\n   *\n   */\n  _runElementAnimation(element,name,options={},eventName=undefined){\n\n    //if nothing was found or no element was passed resolve the promise immediatly\n    if(!element) return Promise.reject(new Error(\"invalid first argument\"));\n\n    //resolve selectors\n    if(typeof element === \"string\") element = this.container.querySelectorAll(element);\n\n    //if nothing was found or no element was passed resolve the promise immediatly\n    if(!element || element.length === 0) return Promise.resolve(element);\n\n    //parse animation properties\n    if(!element.animations) this.parseAttributes(element);\n\n    if(eventName) dispatch(element,eventName+\"Begin\");\n\n    let overrides = {\n      complete:elements=>{\n        this.isAnimating = false;\n        if(eventName) dispatch(element,eventName+\"Done\");\n        if(options && options.complete) options.complete.apply(this,arguments);\n      }\n    };\n\n    var opts = Object.assign({},this.options,options,overrides);\n    return this.animate(element, name, opts, true);\n  }\n\n  /**\n   * Parse animations specified in the elements attributes.\n   * The parsed attributes will be stored in the animations property for the element.\n   *\n   * @param element {HTMLElement|Array<HTMLElement>}   Element(s) to parse\n   */\n  parseAttributes(element){\n    let el,i,l;\n    element = this.ensureList(element);\n    for (i = 0,l=element.length; i < l; i++) {\n      el = element[i];\n      el.animations = {};\n      el.animations.enter = this.parseAttributeValue(el.getAttribute('anim-enter'))||this.enterAnimation;\n      el.animations.leave = this.parseAttributeValue(el.getAttribute('anim-leave'))||this.leaveAnimation;\n    }\n  }\n\n  /**\n   * Parse an attribute value as an animation definition\n   *\n   * syntax with effectname:     effectName:{prop1:value,prop2:value}\n   * syntax with properties:     {prop1:value,prop2:value}:{prop1:value,prop2:value}\n   *\n   * @param value           Attribute value\n   * @returns {Object}      Object with the effectName/properties and options that have been extracted\n   */\n  parseAttributeValue(value){\n    if(!value) return value;\n    let p = value.split(';');\n    let properties = p[0];\n    let options = {};\n    if(properties[0]=='{' && properties[properties.length-1] == '}') properties = JSOL.parse(properties);\n\n    if(p.length>1) {\n      options = p[1];\n      options = JSOL.parse(options);\n    }\n    return {properties,options};\n  }\n\n  ensureList(element){\n    if(!Array.isArray(element) && !(element instanceof NodeList)) element = [element];\n    return element\n  }\n\n}\n\nfunction dispatch(element,name){\n  var evt = new CustomEvent(animationEvent[name], { bubbles: true, cancelable: true, detail: element });\n  document.dispatchEvent(evt);\n}\n"]}